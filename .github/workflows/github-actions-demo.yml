# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: cayenne

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    name: JDK ${{ matrix.java }}, DB ${{ matrix.db-profile }}
    continue-on-error: ${{ matrix.java == '16-ea' }}
    strategy:
      matrix:
        java: [8, 11, 16-ea]
        db-profile: [hsql, h2, derby, mysql-docker, postgres-docker, sqlserver-docker]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up DB ${{ matrix.db-profile }}
        run: mvn verify -q -DcayenneTestConnection=${{ matrix.db-profile }} -DcayenneLogLevel=ERROR -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
# #    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'apache/cayenne' }}
# #    env:
# #      SNAPSHOT_REPO_USERNAME: ${{ secrets.SNAPSHOT_REPO_USERNAME }}
# #      SNAPSHOT_REPO_PASSWORD: ${{ secrets.SNAPSHOT_REPO_PASSWORD }}
#     env:
#       GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
#       GITHUB_USERNAME: KravchenkoAS
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v1
#       - name: Set up java 8
#         uses: actions/setup-java@v1
#         with:
#           java-version: 8
#       - name: Deploy
#         run: mvn deploy -DskipTests --settings .github/workflows/.settings.xml
